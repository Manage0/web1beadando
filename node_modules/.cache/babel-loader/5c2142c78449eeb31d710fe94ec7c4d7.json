{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Web1bead\\\\web1bead\\\\src\\\\Routes\\\\RandomCatThings.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect, useContext } from 'react';\nimport \"../Css/Button.css\";\nimport { UserNameContext } from \"../UsernameContext\";\n\nconst RandomCatThings = () => {\n  _s();\n\n  var selectedFacts = [];\n  const [facts, setFacts] = useState();\n  const [APIisBack, setAPIisBack] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [index, setIndex] = useState(0);\n  const {\n    username\n  } = useContext(UserNameContext);\n  useEffect(() => {\n    const load = async () => {\n      try {\n        const resp = await axios(\"https://jsonplaceholder.typicode.com/todos/\");\n        setFacts(resp.data);\n        setLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n\n      try {\n        const resp = await axios(\"https://cat-fact.herokuapp.com/facts\"); //setFacts(resp.data)\n\n        setAPIisBack(true);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    if (!loaded) {\n      load();\n    }\n  }, []);\n\n  if (!loaded) {\n    return /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"You will see the facts here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n  const Save = () => {\n    if (username) {\n      const actualItem = localStorage.getItem(username);\n\n      if (selectedFacts[index] || selectedFacts[index + 1] || selectedFacts[index + 2] || selectedFacts[index + 3]) {\n        if (selectedFacts[index]) {\n          localStorage.setItem(username, actualItem ? JSON.stringify([...JSON.parse(actualItem), facts[index].title]) : JSON.stringify([facts[index].title]));\n        }\n\n        if (selectedFacts[index + 1]) {\n          if (selectedFacts[index + 1]) {\n            localStorage.setItem(username, actualItem ? JSON.stringify([...JSON.parse(actualItem), facts[index + 1].title]) : JSON.stringify([facts[index + 1].title]));\n          }\n        }\n\n        if (selectedFacts[index + 2]) {\n          if (selectedFacts[index + 2]) {\n            localStorage.setItem(username, actualItem ? JSON.stringify([...JSON.parse(actualItem), facts[index + 2].title]) : JSON.stringify([facts[index + 2].title]));\n          }\n        }\n\n        if (selectedFacts[index + 3]) {\n          if (selectedFacts[index + 3]) {\n            localStorage.setItem(username, actualItem ? JSON.stringify([...JSON.parse(actualItem), facts[index + 3].title]) : JSON.stringify([facts[index + 3].title]));\n          }\n        }\n      } else {\n        alert(\"No items selected!\");\n      }\n    } else {\n      alert(\"No username set!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"styleddiv\",\n    children: [\"These aren't cat facts, because the API crashed :(\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), APIisBack ? \"API is back online! :)\" : \"API still not working :(\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => {\n        selectedFacts[index] ? selectedFacts[index] = false : selectedFacts[index] = true;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), index + 1 + \". \" + JSON.stringify(facts[index].title), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => {\n        selectedFacts[index + 1] ? selectedFacts[index + 1] = false : selectedFacts[index + 1] = true;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), index + 2 + \". \" + JSON.stringify(facts[index + 1].title), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => {\n        selectedFacts[index + 2] ? selectedFacts[index + 2] = false : selectedFacts[index + 2] = true;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), index + 3 + \". \" + JSON.stringify(facts[index + 2].title), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => {\n        selectedFacts[index + 3] ? selectedFacts[index + 3] = false : selectedFacts[index + 3] = true;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), index + 4 + \". \" + JSON.stringify(facts[index + 3].title), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"styleddiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        variant: \"primary\",\n        className: \"button\",\n        onClick: () => {\n          index >= 4 ? setIndex(index - 4) : setIndex(index);\n        },\n        children: index >= 4 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Previous \", index - 3, \"-\", index]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No previous available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        variant: \"primary\",\n        className: \"button\",\n        onClick: () => {\n          setIndex(index + 4);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Next \", index + 5, \"-\", index + 8]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 94\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"styleddiv\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        variant: \"primary\",\n        className: \"button\",\n        onClick: () => {\n          Save();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Save Selected items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RandomCatThings, \"mcb/SOKaIwIzLvGTzdlgqWwUtaY=\");\n\n_c = RandomCatThings;\nexport default RandomCatThings;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomCatThings\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Web1bead/web1bead/src/Routes/RandomCatThings.js"],"names":["axios","useState","useEffect","useContext","UserNameContext","RandomCatThings","selectedFacts","facts","setFacts","APIisBack","setAPIisBack","loaded","setLoaded","index","setIndex","username","load","resp","data","err","console","log","Save","actualItem","localStorage","getItem","setItem","JSON","stringify","parse","title","alert"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport \"../Css/Button.css\"\r\nimport { UserNameContext } from \"../UsernameContext\"\r\n\r\nconst RandomCatThings = () => {\r\n\r\n  var selectedFacts=[]\r\n  const [facts, setFacts] = useState();\r\n  const [APIisBack, setAPIisBack] = useState(false);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [index, setIndex] = useState(0);\r\n  const { username } = useContext(UserNameContext)\r\n\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      try {\r\n        const resp = await axios(\r\n          \"https://jsonplaceholder.typicode.com/todos/\"\r\n        )\r\n        setFacts(resp.data)\r\n        setLoaded(true)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n      try {\r\n        const resp = await axios(\r\n          \"https://cat-fact.herokuapp.com/facts\"\r\n        )\r\n        //setFacts(resp.data)\r\n        setAPIisBack(true)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n    if (!loaded) {\r\n      load()\r\n    }\r\n  }, [])\r\n  if (!loaded) {\r\n    return (<h5>You will see the facts here!</h5>)\r\n  }\r\n\r\n  const Save = () => {\r\n    if (username) {\r\n      const actualItem=localStorage.getItem(username)\r\n      if (selectedFacts[index] || selectedFacts[index + 1] || selectedFacts[index + 2] || selectedFacts[index + 3]) {\r\n        if (selectedFacts[index]) {\r\n          localStorage.setItem(\r\n            username,\r\n            actualItem ?\r\n              JSON.stringify(\r\n                [\r\n                  ...JSON.parse(actualItem),\r\n                  facts[index].title\r\n                ])\r\n              : JSON.stringify([facts[index].title]));\r\n        }\r\n        if (selectedFacts[index + 1]) {\r\n          if (selectedFacts[index + 1]) {\r\n            localStorage.setItem(\r\n              username,\r\n              actualItem ?\r\n                JSON.stringify(\r\n                  [\r\n                    ...JSON.parse(actualItem),\r\n                    facts[index + 1].title\r\n                  ])\r\n                : JSON.stringify([facts[index + 1].title]))\r\n          }\r\n        }\r\n        if (selectedFacts[index + 2]) {\r\n          if (selectedFacts[index + 2]) {\r\n            localStorage.setItem(\r\n              username,\r\n              actualItem ?\r\n                JSON.stringify(\r\n                  [\r\n                    ...JSON.parse(actualItem),\r\n                    facts[index + 2].title\r\n                  ])\r\n                : JSON.stringify([facts[index + 2].title]))\r\n          }\r\n        }\r\n        if (selectedFacts[index + 3]) {\r\n          if (selectedFacts[index + 3]) {\r\n            localStorage.setItem(\r\n              username,\r\n              actualItem ?\r\n                JSON.stringify(\r\n                  [\r\n                    ...JSON.parse(actualItem),\r\n                    facts[index + 3].title\r\n                  ])\r\n                : JSON.stringify([facts[index + 3].title]))\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        alert(\"No items selected!\");\r\n      }\r\n    }\r\n    else {\r\n      alert(\"No username set!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"styleddiv\">\r\n      These aren't cat facts, because the API crashed :(\r\n      <br />\r\n      {APIisBack ? \"API is back online! :)\" : \"API still not working :(\"}\r\n      <br />\r\n      <input type=\"checkbox\" onChange={() => { selectedFacts[index] ? selectedFacts[index] = false : selectedFacts[index] = true }} />\r\n      {(index + 1) + \". \" + JSON.stringify(facts[index].title)}\r\n      <br />\r\n      <input type=\"checkbox\" onChange={() => { selectedFacts[index + 1] ? selectedFacts[index + 1] = false : selectedFacts[index + 1] = true }} />\r\n      {(index + 2) + \". \" + JSON.stringify(facts[index + 1].title)}\r\n      <br />\r\n      <input type=\"checkbox\" onChange={() => { selectedFacts[index + 2] ? selectedFacts[index + 2] = false : selectedFacts[index + 2] = true }} />\r\n      {(index + 3) + \". \" + JSON.stringify(facts[index + 2].title)}\r\n      <br />\r\n      <input type=\"checkbox\" onChange={() => { selectedFacts[index + 3] ? selectedFacts[index + 3] = false : selectedFacts[index + 3] = true }} />\r\n      {(index + 4) + \". \" + JSON.stringify(facts[index + 3].title)}\r\n      <br />\r\n      <div className=\"styleddiv\">\r\n        <button variant='primary' className=\"button\" onClick={() => { index >= 4 ? setIndex(index - 4) : setIndex(index) }}>\r\n          {index >= 4 ? <h4>Previous {index - 3}-{index}</h4> : <h4>No previous available</h4>}</button>\r\n        {/*handle negative nums and html danger text*/}\r\n        <button variant='primary' className=\"button\" onClick={() => { setIndex(index + 4) }}><h4>Next {index + 5}-{index + 8}</h4></button>\r\n        <br />\r\n      </div>\r\n      <div className=\"styleddiv\">\r\n        <button variant='primary' className=\"button\" onClick={() => { Save() }}><h4>Save Selected items</h4></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RandomCatThings"]},"metadata":{},"sourceType":"module"}